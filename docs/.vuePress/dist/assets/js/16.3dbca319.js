(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{331:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html","aria-hidden":"true"}},[s._v("#")]),s._v(" html")]),s._v(" "),a("h3",{attrs:{id:"script标签中defer和async的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script标签中defer和async的区别","aria-hidden":"true"}},[s._v("#")]),s._v(" script标签中defer和async的区别")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("defer：浏览器指示脚本在文档被解析后执行，script被异步加载后并不会立刻执行，而是等待文档被解析完毕后执行。")])]),s._v(" "),a("li",[a("p",[s._v("async：同样是异步加载脚本，区别是脚本加载完毕后立即执行，这导致async属性下的脚本是乱序的，对于script有先后依赖关系的情况，并不适用。")])])]),s._v(" "),a("h3",{attrs:{id:"前端的存储方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端的存储方式","aria-hidden":"true"}},[s._v("#")]),s._v(" 前端的存储方式")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("cookies： 在HTML5标准前本地储存的主要方式，优点是兼容性好，请求头自带cookie方便，缺点是大小只有4k，自动请求头加入cookie浪费流量，每个domain限制20个cookie，使用起来麻烦需要自行封装")])]),s._v(" "),a("li",[a("p",[s._v("localStorage：HTML5加入的以键值对(Key-Value)为标准的方式，优点是操作方便，永久性储存（除非手动删除），大小为5M，兼容IE8+")])]),s._v(" "),a("li",[a("p",[s._v("sessionStorage：与localStorage基本类似，区别是sessionStorage当页面关闭后会被清理，而且与cookie、localStorage不同，他不能在所有同源窗口中共享，是会话级别的储存方式")])]),s._v(" "),a("li",[a("p",[s._v("Web SQL：2010年被W3C废弃的本地数据库数据存储方案，但是主流浏览器（火狐除外）都已经有了相关的实现，web sql类似于SQLite，是真正意义上的关系型数据库，用sql进行操作，当我们用JavaScript时要进行转换，较为繁琐。")])]),s._v(" "),a("li",[a("p",[s._v("IndexedDB： 是被正式纳入HTML5标准的数据库储存方案，它是NoSQL数据库，用键值对进行储存，可以进行快速读取操作，非常适合web场景，同时用JavaScript进行操作会非常方便。")])])]),s._v(" "),a("h2",{attrs:{id:"css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css","aria-hidden":"true"}},[s._v("#")]),s._v(" CSS")]),s._v(" "),a("h3",{attrs:{id:"css选择器优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css选择器优先级","aria-hidden":"true"}},[s._v("#")]),s._v(" css选择器优先级")]),s._v(" "),a("p",[s._v("CSS选择器的优先级是：内联 > ID选择器 > 类选择器 > 标签选择器")]),s._v(" "),a("p",[s._v("到具体的计算层面，优先级是由 A 、B、C、D 的值来决定的，其中它们的值计算规则如下：")]),s._v(" "),a("ul",[a("li",[s._v("A 的值等于 1 的前提是存在内联样式, 否则 A = 0;")]),s._v(" "),a("li",[s._v("B 的值等于 ID选择器 出现的次数;")]),s._v(" "),a("li",[s._v("C 的值等于 类选择器 和 属性选择器 和 伪类 出现的总次数;")]),s._v(" "),a("li",[s._v("D 的值等于 标签选择器 和 伪元素 出现的总次数 。")])]),s._v(" "),a("p",[s._v("就比如下面的选择器，它不存在内联样式，所以A=0,不存在id选择器B=0,存在一个类选择器C=1,存在三个标签选择器D=3，那么最终计算结果为: {0, 0, 1 ,3}")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("ul ol li .red")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("按照这个结算方式，下面的计算结果为: {0, 1, 0, 0}")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("ul ol li .red")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("我们的比较优先级的方式是从A到D去比较值的大小，A、B、C、D权重从左到右，依次减小。判断优先级时，从左到右，一一比较，直到比较出最大值，即可停止。")]),s._v(" "),a("p",[s._v("比如第二个例子的B与第一个例子的B相比，1>0,接下来就不需要比较了，第二个选择器的优先级更高。")]),s._v(" "),a("h3",{attrs:{id:"px-em-rem-vw-vh等单位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#px-em-rem-vw-vh等单位","aria-hidden":"true"}},[s._v("#")]),s._v(" px em rem vw vh等单位")]),s._v(" "),a("ul",[a("li",[s._v("px：绝对单位，页面按精确像素展示。")]),s._v(" "),a("li",[s._v("em：相对单位，基准点为父节点字体的大小，如果自身定义了font-size按自身来计算（浏览器默认字体是16px），整个页面内1em不是一个固定的值。")]),s._v(" "),a("li",[s._v("rem：相对单位，可理解为”root em”, 相对根节点html的字体大小来计算，CSS3新加属性，chrome/firefox/IE9+支持")]),s._v(" "),a("li",[s._v("vw：1vw等于适口宽度的1%；vh：1vh等于适口高度的1%；")])]),s._v(" "),a("h2",{attrs:{id:"javascript-基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-基础","aria-hidden":"true"}},[s._v("#")]),s._v(" "),a("code",[s._v("Javascript")]),s._v(" 基础")]),s._v(" "),a("h3",{attrs:{id:"基本数据类型有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型有哪些","aria-hidden":"true"}},[s._v("#")]),s._v(" 基本数据类型有哪些")]),s._v(" "),a("p",[s._v("null、undefined、Number、String、Boolean、Object、Symbol(ES6 新增)")]),s._v(" "),a("h3",{attrs:{id:"类型判断方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型判断方法","aria-hidden":"true"}},[s._v("#")]),s._v(" 类型判断方法")]),s._v(" "),a("ul",[a("li",[s._v("typeof"),a("br"),s._v("\n只能判断基础类型，但不能判断对象和数组")])]),s._v(" "),a("h3",{attrs:{id:"null-与-undefined-的区别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-与-undefined-的区别是什么","aria-hidden":"true"}},[s._v("#")]),s._v(" null 与 undefined 的区别是什么")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("null"),a("br"),s._v("\n表示被赋值过的对象，刻意把一个对象赋值为 "),a("code",[s._v("null")]),s._v(" ，故意表示其为空，不应有值。"),a("br"),s._v("\n所以对象的某个属性值为 "),a("code",[s._v("null")]),s._v(" 是正常的，"),a("code",[s._v("null")]),s._v(" 转换为数值时值为 "),a("code",[s._v("0")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("undefined"),a("br"),s._v("\n表示“缺少值”，即此处应有一个值，但还没有定义，如果一个对象的某个属性值为 "),a("code",[s._v("undefined")]),s._v(" ，这是不正常的，如 "),a("code",[s._v("obj.name=undefined")]),s._v("，我们不应该这样写，应该直接 "),a("code",[s._v("delete obj.name")]),s._v("。"),a("br"),s._v(" "),a("code",[s._v("undefined")]),s._v(" 转为数值时为 "),a("code",[s._v("NaN")]),s._v(" (非数字值的特殊值)")])])]),s._v(" "),a("h3",{attrs:{id:"var、let、const-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var、let、const-的区别","aria-hidden":"true"}},[s._v("#")]),s._v(" var、let、const 的区别")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("var")]),s._v(" 会发生变量提升现象，即变量声明语句可以放在变量使用后，"),a("code",[s._v("let")]),s._v(" 和 "),a("code",[s._v("const")]),s._v(" 不行")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("var")]),s._v(" 可重复声明，后面声明的变量的值会覆盖之前声明的值，"),a("code",[s._v("let")]),s._v(" 和 "),a("code",[s._v("const")]),s._v(" 不行")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("let")]),s._v(" 声明时会生成块级作用域，只有在该作用域内才能使用该变量")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("const")]),s._v(" 声明的变量后不能改变它的值")])])]),s._v(" "),a("h3",{attrs:{id:"什么是闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是闭包","aria-hidden":"true"}},[s._v("#")]),s._v(" 什么是闭包")]),s._v(" "),a("p",[s._v("当函数可以记住并访问所在的词法作用域时，就产生了闭包，即函数是在当前词法作用域之外执行。一般是指，在函数执行完销毁后，外部还能读取到函数里面的变量。")]),s._v(" "),a("p",[s._v("作用：1、封装私有变量 2、让某些值始终保存在内存中")]),s._v(" "),a("h3",{attrs:{id:"new-的意义以及实现方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-的意义以及实现方法","aria-hidden":"true"}},[s._v("#")]),s._v(" new 的意义以及实现方法")]),s._v(" "),a("p",[s._v("任何函数，只要通过 new 操作符来调用，那它就可以作为构造函数")]),s._v(" "),a("ol",[a("li",[s._v("创建一个新对象；")]),s._v(" "),a("li",[s._v("将构造函数的作用域赋给新对象（因此 this 就指向了这个新对象）；")]),s._v(" "),a("li",[s._v("执行构造函数中的代码（为这个新对象添加属性）；")]),s._v(" "),a("li",[s._v("返回新对象。")])]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("New")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("arg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用构造函数的原型创建一个空对象")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" object "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行构造函数，进行赋值等操作")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果构造函数有return操作则返回构造函数返回值，没有则返回对象")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ret "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" ret "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"this是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this是什么","aria-hidden":"true"}},[s._v("#")]),s._v(" this是什么")]),s._v(" "),a("p",[s._v("this 实际上是在函数被调用时发生的绑定，它指向什么完全取决于函数在哪里被调用"),a("br"),s._v("\n判断绑定方法")]),s._v(" "),a("ol",[a("li",[s._v("由 new 调用？绑定到新创建的对象。")]),s._v(" "),a("li",[s._v("由 call 或者 apply（或者 bind）调用？绑定到指定的对象。")]),s._v(" "),a("li",[s._v("由上下文对象调用？绑定到那个上下文对象。")]),s._v(" "),a("li",[s._v("默认：在严格模式下绑定到 undefined，否则绑定到全局对象。")])]),s._v(" "),a("h3",{attrs:{id:"call-apply-bind-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call-apply-bind-的区别","aria-hidden":"true"}},[s._v("#")]),s._v(" call,apply,bind 的区别")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("call()")]),s._v(" "),a("p",[s._v("第一个参数是目标对象，之后的多个参数是函数调用时所需的参数")])]),s._v(" "),a("li",[a("p",[s._v("apply()")]),s._v(" "),a("p",[s._v("和 call 一样，但是之后的参数必须以数组的形式添加")])]),s._v(" "),a("li",[a("p",[s._v("bind()")]),s._v(" "),a("p",[s._v("用于将函数体内的 this 绑定到某个对象，然后返回一个新函数")])])]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// apply 只是参数不同")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("myCall")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" thisArg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"function"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"not function"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" fn "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  thisArg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" thisArg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("myBind")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"function"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Bind must be called on a function"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" self "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// new优先级")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("fbound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("self")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 继承原型上的属性和方法")]),s._v("\n  fbound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" fbound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"原型和原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型和原型链","aria-hidden":"true"}},[s._v("#")]),s._v(" 原型和原型链")]),s._v(" "),a("p",[s._v("每个函数都有一个"),a("code",[s._v("prototype")]),s._v("属性，它是指向函数原型的一个指针，而构造函数同样有自己的原型对象。通过构造函数生成的对象实例中，都有一个"),a("code",[s._v("__proto__")]),s._v("属性，它指向构造函数的原型对象。")]),s._v(" "),a("p",[s._v("原型链是指当对象属性或函数在被引用时，如果在当前对象没有找到该属性或函数，就会在当前对象的原型上寻找，如果还有没有，就会继续往上层的原型对象上找。")]),s._v(" "),a("h3",{attrs:{id:"继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承","aria-hidden":"true"}},[s._v("#")]),s._v(" 继承")]),s._v(" "),a("h3",{attrs:{id:"es6-模块与-commonjs-模块区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-模块与-commonjs-模块区别","aria-hidden":"true"}},[s._v("#")]),s._v(" ES6 模块与 CommonJS 模块区别")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("CommonJS")]),s._v(" 模块输出的是一个值的拷贝，"),a("code",[s._v("ES6")]),s._v(" 模块输出的是值的引用。")]),s._v(" "),a("li",[a("code",[s._v("CommonJS")]),s._v(" 模块是运行时加载，"),a("code",[s._v("ES6")]),s._v(" 模块是编译时输出接口。")])]),s._v(" "),a("h2",{attrs:{id:"async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-await","aria-hidden":"true"}},[s._v("#")]),s._v(" async/await")]),s._v(" "),a("p",[s._v("async 函数，就是 Generator 函数的语法糖，它建立在 Promises 上，并且与所有现有的基于 Promise 的 API 兼容。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Async")]),s._v("—声明一个异步函数(async function someName(){...})")])]),s._v(" "),a("ol",[a("li",[s._v("自动将常规函数转换成 Promise，返回值也是一个 Promise 对象")]),s._v(" "),a("li",[s._v("只有 async 函数内部的异步操作执行完，才会执行 then 方法指定的回调函数")]),s._v(" "),a("li",[s._v("异步函数内部可以使用 await")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Await")]),s._v("—暂停异步的功能执行(var result = await someAsyncCall()😉")])]),s._v(" "),a("ol",[a("li",[s._v("放置在 Promise 调用之前，await 强制其他代码等待，直到 Promise 完成并返回结果")]),s._v(" "),a("li",[s._v("只能与 Promise 一起使用，不适用与回调")]),s._v(" "),a("li",[s._v("只能在 async 函数内部使用")])])])},[],!1,null,null,null);t.default=e.exports}}]);