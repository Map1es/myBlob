(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{511:function(t,s,a){"use strict";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" html")]),t._v(" "),a("h3",{attrs:{id:"script-标签中-defer-和-async-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script-标签中-defer-和-async-的区别"}},[t._v("#")]),t._v(" script 标签中 defer 和 async 的区别")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("defer")]),t._v("：浏览器指示脚本在文档被解析后执行，script 被异步加载后并不会立刻执行，而是等待文档被解析完毕后执行。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("async")]),t._v("：同样是异步加载脚本，区别是脚本加载完毕后立即执行，这导致 async 属性下的脚本是乱序的，对于 script 有先后依赖关系的情况，并不适用。")])])]),t._v(" "),a("h3",{attrs:{id:"前端的存储方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端的存储方式"}},[t._v("#")]),t._v(" 前端的存储方式")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("cookies")]),t._v("： 在 HTML5 标准前本地储存的主要方式，优点是兼容性好，请求头自带 cookie 方便，缺点是大小只有 4k，自动请求头加入 cookie 浪费流量，每个 domain 限制 20 个 cookie，使用起来麻烦需要自行封装")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("localStorage")]),t._v("：HTML5 加入的以键值对(Key-Value)为标准的方式，优点是操作方便，永久性储存（除非手动删除），大小为 5M，兼容 IE8+")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("sessionStorage")]),t._v("：与 localStorage 基本类似，区别是 sessionStorage 当页面关闭后会被清理，而且与 cookie、localStorage 不同，他不能在所有同源窗口中共享，是会话级别的储存方式")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Web SQL")]),t._v("：2010 年被 W3C 废弃的本地数据库数据存储方案，但是主流浏览器（火狐除外）都已经有了相关的实现，web sql 类似于 SQLite，是真正意义上的关系型数据库，用 sql 进行操作，当我们用 JavaScript 时要进行转换，较为繁琐。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("IndexedDB")]),t._v("： 是被正式纳入 HTML5 标准的数据库储存方案，它是 NoSQL 数据库，用键值对进行储存，可以进行快速读取操作，非常适合 web 场景，同时用 JavaScript 进行操作会非常方便。")])])]),t._v(" "),a("h2",{attrs:{id:"css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),a("h3",{attrs:{id:"css-选择器优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-选择器优先级"}},[t._v("#")]),t._v(" css 选择器优先级")]),t._v(" "),a("p",[t._v("CSS 选择器的优先级是：内联 > ID 选择器 > 类选择器 > 标签选择器")]),t._v(" "),a("p",[t._v("到具体的计算层面，优先级是由 A 、B、C、D 的值来决定的，其中它们的值计算规则如下：")]),t._v(" "),a("ul",[a("li",[t._v("A 的值等于 1 的前提是存在内联样式, 否则 A = 0;")]),t._v(" "),a("li",[t._v("B 的值等于 ID 选择器 出现的次数;")]),t._v(" "),a("li",[t._v("C 的值等于 类选择器 和 属性选择器 和 伪类 出现的总次数;")]),t._v(" "),a("li",[t._v("D 的值等于 标签选择器 和 伪元素 出现的总次数 。")])]),t._v(" "),a("p",[t._v("就比如下面的选择器，它不存在内联样式，所以 A=0,不存在 id 选择器 B=0,存在一个类选择器 C=1,存在三个标签选择器 D=3，那么最终计算结果为: {0, 0, 1 ,3}")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("ul ol li .red")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("按照这个结算方式，下面的计算结果为: {0, 1, 0, 0}")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("ul ol li .red")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("我们的比较优先级的方式是从 A 到 D 去比较值的大小，A、B、C、D 权重从左到右，依次减小。判断优先级时，从左到右，一一比较，直到比较出最大值，即可停止。")]),t._v(" "),a("p",[t._v("比如第二个例子的 B 与第一个例子的 B 相比，1>0,接下来就不需要比较了，第二个选择器的优先级更高。")]),t._v(" "),a("h3",{attrs:{id:"px-em-rem-vw-vh-等单位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#px-em-rem-vw-vh-等单位"}},[t._v("#")]),t._v(" px em rem vw vh 等单位")]),t._v(" "),a("ul",[a("li",[t._v("px：绝对单位，页面按精确像素展示。")]),t._v(" "),a("li",[t._v("em：相对单位，基准点为父节点字体的大小，如果自身定义了 font-size 按自身来计算（浏览器默认字体是 16px），整个页面内 1em 不是一个固定的值。")]),t._v(" "),a("li",[t._v("rem：相对单位，可理解为”root em”, 相对根节点 html 的字体大小来计算，CSS3 新加属性，chrome/firefox/IE9+支持")]),t._v(" "),a("li",[t._v("vw：1vw 等于适口宽度的 1%；vh：1vh 等于适口高度的 1%；")])]),t._v(" "),a("h3",{attrs:{id:"rgba-和-opacity-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rgba-和-opacity-区别"}},[t._v("#")]),t._v(" rgba()和 opacity 区别")]),t._v(" "),a("p",[t._v("rgba()和 opacity 都能实现透明效果，但最大的不同是 opacity 作用于元素，以及元素内的所有内容的透明度，而 rgba()只作用于元素的颜色或其背景色。（设置 rgba 透明的元素的子元素不会继承透明效果！）")]),t._v(" "),a("h3",{attrs:{id:"盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),a("p",[t._v("盒模型由content（内容）、padding（内边距）、border（边框）、margin（外边距）组成。")]),t._v(" "),a("p",[t._v("盒模型还分标准盒模型盒怪异盒模型。在标准盒模型中，宽高是只限width和height；而在怪异盒模型中宽高表示border+padding+content(这一般只在IE有，应舍弃)")]),t._v(" "),a("h3",{attrs:{id:"块级格式化上下文-bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块级格式化上下文-bfc"}},[t._v("#")]),t._v(" 块级格式化上下文（BFC）")]),t._v(" "),a("p",[t._v("BFC是指一个独立的渲染区域，只有块级元素参与， 它规定了内部的块级盒子如何布局，并且与这个区域外部毫不相干。")]),t._v(" "),a("p",[t._v("它的作用是在一块独立的区域，让处于BFC内部的元素与外部的元素互相隔离。")]),t._v(" "),a("p",[t._v("形成条件：")]),t._v(" "),a("ul",[a("li",[t._v("根元素，即HTML元素")]),t._v(" "),a("li",[t._v("position: fixed/absolute")]),t._v(" "),a("li",[t._v("float 不为none")]),t._v(" "),a("li",[t._v("overflow不为visible")]),t._v(" "),a("li",[t._v("display的值为inline-block、table-cell、table-caption")])]),t._v(" "),a("h3",{attrs:{id:"flex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[t._v("#")]),t._v(" flex")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"}},[a("em",[t._v("flex布局")]),t._v(" --阮一峰"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"javascript-基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-基础"}},[t._v("#")]),t._v(" "),a("code",[t._v("Javascript")]),t._v(" 基础")]),t._v(" "),a("h3",{attrs:{id:"基本数据类型有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型有哪些"}},[t._v("#")]),t._v(" 基本数据类型有哪些")]),t._v(" "),a("p",[t._v("null、undefined、Number、String、Boolean、Object、Symbol(ES6 新增)")]),t._v(" "),a("h3",{attrs:{id:"类型判断方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型判断方法"}},[t._v("#")]),t._v(" 类型判断方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("typeof"),a("br"),t._v("\n只能判断基础类型，但不能判断对象和数组")])]),t._v(" "),a("li",[a("p",[t._v("instanceof"),a("br"),t._v("\n根据原型判断，基本不准确")])]),t._v(" "),a("li",[a("p",[t._v("Object.prototype.toString.call()"),a("br"),t._v("\n因为每个应用类型都有一个 "),a("code",[t._v("toString")]),t._v(" 方法，进行拆箱操作则可以准确判断变量类型")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"null-与-undefined-的区别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-与-undefined-的区别是什么"}},[t._v("#")]),t._v(" null 与 undefined 的区别是什么")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("null"),a("br"),t._v("\n表示被赋值过的对象，刻意把一个对象赋值为 "),a("code",[t._v("null")]),t._v(" ，故意表示其为空，不应有值。"),a("br"),t._v("\n所以对象的某个属性值为 "),a("code",[t._v("null")]),t._v(" 是正常的，"),a("code",[t._v("null")]),t._v(" 转换为数值时值为 "),a("code",[t._v("0")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("undefined"),a("br"),t._v("\n表示“缺少值”，即此处应有一个值，但还没有定义，如果一个对象的某个属性值为 "),a("code",[t._v("undefined")]),t._v(" ，这是不正常的，如 "),a("code",[t._v("obj.name=undefined")]),t._v("，我们不应该这样写，应该直接 "),a("code",[t._v("delete obj.name")]),t._v("。"),a("br"),t._v(" "),a("code",[t._v("undefined")]),t._v(" 转为数值时为 "),a("code",[t._v("NaN")]),t._v(" (非数字值的特殊值)")])])]),t._v(" "),a("h3",{attrs:{id:"var、let、const-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var、let、const-的区别"}},[t._v("#")]),t._v(" var、let、const 的区别")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("var")]),t._v(" 会发生变量提升现象，即变量声明语句可以放在变量使用后，"),a("code",[t._v("let")]),t._v(" 和 "),a("code",[t._v("const")]),t._v(" 不行")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("var")]),t._v(" 可重复声明，后面声明的变量的值会覆盖之前声明的值，"),a("code",[t._v("let")]),t._v(" 和 "),a("code",[t._v("const")]),t._v(" 不行")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("let")]),t._v(" 声明时会生成块级作用域，只有在该作用域内才能使用该变量")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("const")]),t._v(" 声明的变量后不能改变它的值")])])]),t._v(" "),a("h3",{attrs:{id:"什么是闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是闭包"}},[t._v("#")]),t._v(" 什么是闭包")]),t._v(" "),a("p",[t._v("当函数可以记住并访问所在的词法作用域时，就产生了闭包，即函数是在当前词法作用域之外执行。一般是指，在函数执行完销毁后，外部还能读取到函数里面的变量。")]),t._v(" "),a("p",[t._v("作用：1、封装私有变量 2、让某些值始终保存在内存中")]),t._v(" "),a("h3",{attrs:{id:"new-的意义以及实现方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-的意义以及实现方法"}},[t._v("#")]),t._v(" new 的意义以及实现方法")]),t._v(" "),a("p",[t._v("任何函数，只要通过 "),a("code",[t._v("new")]),t._v(" 操作符来调用，那它就可以作为构造函数")]),t._v(" "),a("ol",[a("li",[t._v("创建一个新对象；")]),t._v(" "),a("li",[t._v("将构造函数的作用域赋给新对象（因此 "),a("code",[t._v("this")]),t._v(" 就指向了这个新对象）；")]),t._v(" "),a("li",[t._v("执行构造函数中的代码（为这个新对象添加属性）；")]),t._v(" "),a("li",[t._v("返回新对象。")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用构造函数的原型创建一个空对象")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" object "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行构造函数，进行赋值等操作")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果构造函数有return操作则返回构造函数返回值，没有则返回对象")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h3",{attrs:{id:"this-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this-是什么"}},[t._v("#")]),t._v(" this 是什么")]),t._v(" "),a("p",[t._v("this 实际上是在函数被调用时发生的绑定，它指向什么完全取决于函数在哪里被调用"),a("br"),t._v("\n判断绑定方法")]),t._v(" "),a("ol",[a("li",[t._v("由 "),a("code",[t._v("new")]),t._v(" 调用？绑定到新创建的对象。")]),t._v(" "),a("li",[t._v("由 "),a("code",[t._v("call")]),t._v(" 或者 "),a("code",[t._v("apply")]),t._v("（或者 "),a("code",[t._v("bind")]),t._v("）调用？绑定到指定的对象。")]),t._v(" "),a("li",[t._v("由上下文对象调用？绑定到那个上下文对象。")]),t._v(" "),a("li",[t._v("默认：在严格模式下绑定到 "),a("code",[t._v("undefined")]),t._v("，否则绑定到全局对象。")])]),t._v(" "),a("h3",{attrs:{id:"call-apply-bind-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call-apply-bind-的区别"}},[t._v("#")]),t._v(" call,apply,bind 的区别")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("call")])]),t._v(" "),a("p",[t._v("第一个参数是目标对象，之后的多个参数是函数调用时所需的参数")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("apply")])]),t._v(" "),a("p",[t._v("和 call 一样，但是之后的参数必须以数组的形式添加")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("bind")])]),t._v(" "),a("p",[t._v("用于将函数体内的 this 绑定到某个对象，然后返回一个新函数")])])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// apply 只是参数不同")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myCall")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" thisArg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"not function"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  thisArg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" thisArg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myBind")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Bind must be called on a function"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" self "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// new优先级")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fbound")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("self")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 继承原型上的属性和方法")]),t._v("\n  fbound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fbound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("h3",{attrs:{id:"原型和原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型和原型链"}},[t._v("#")]),t._v(" 原型和原型链")]),t._v(" "),a("p",[t._v("每个函数都有一个"),a("code",[t._v("prototype")]),t._v("属性，它是指向函数原型的一个指针，而构造函数同样有自己的原型对象。通过构造函数生成的对象实例中，都有一个"),a("code",[t._v("__proto__")]),t._v("属性，它指向构造函数的原型对象。")]),t._v(" "),a("p",[t._v("原型链是指当对象属性或函数在被引用时，如果在当前对象没有找到该属性或函数，就会在当前对象的原型上寻找，如果还有没有，就会继续往上层的原型对象上找。")]),t._v(" "),a("h3",{attrs:{id:"继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),a("h3",{attrs:{id:"es6-模块与-commonjs-模块区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-模块与-commonjs-模块区别"}},[t._v("#")]),t._v(" ES6 模块与 CommonJS 模块区别")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("CommonJS")]),t._v(" 模块输出的是一个值的拷贝，"),a("code",[t._v("ES6")]),t._v(" 模块输出的是值的引用。")]),t._v(" "),a("li",[a("code",[t._v("CommonJS")]),t._v(" 模块是运行时加载，"),a("code",[t._v("ES6")]),t._v(" 模块是编译时输出接口。")])]),t._v(" "),a("h3",{attrs:{id:"promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[t._v("#")]),t._v(" promise")]),t._v(" "),a("p",[t._v("promise 是一种为了解决回调地狱的异步解决方案。它有两个特点：")]),t._v(" "),a("ol",[a("li",[t._v("对象的状态不收外界影响，只有异步操作的结果可以决定当前是哪种状态，其他任何操作都不能改变这个状态；")]),t._v(" "),a("li",[t._v("状态改变后就不会再变化了，它只有两种可能："),a("code",[t._v("pending")]),t._v(" 变为 "),a("code",[t._v("fulfilled")]),t._v(" 和 "),a("code",[t._v("pending")]),t._v(" 变为 "),a("code",[t._v("rejected")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-await"}},[t._v("#")]),t._v(" async/await")]),t._v(" "),a("p",[a("code",[t._v("async")]),t._v(" 函数，就是 "),a("code",[t._v("Generator")]),t._v(" 函数的语法糖，它建立在 "),a("code",[t._v("Promises")]),t._v(" 上，并且与所有现有的基于 "),a("code",[t._v("Promise")]),t._v(" 的 API 兼容。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Async")]),t._v("—声明一个异步函数("),a("code",[t._v("async function someName(){...}")]),t._v(")")])]),t._v(" "),a("ol",[a("li",[t._v("自动将常规函数转换成 "),a("code",[t._v("Promise")]),t._v("，返回值也是一个 "),a("code",[t._v("Promise")]),t._v(" 对象")]),t._v(" "),a("li",[t._v("只有 "),a("code",[t._v("async")]),t._v(" 函数内部的异步操作执行完，才会执行 then 方法指定的回调函数")]),t._v(" "),a("li",[t._v("异步函数内部可以使用 "),a("code",[t._v("await")])])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Await")]),t._v("—暂停异步的功能执行("),a("code",[t._v("var result = await someAsyncCall()")]),t._v(")")])]),t._v(" "),a("ol",[a("li",[t._v("放置在 "),a("code",[t._v("Promise")]),t._v(" 调用之前，"),a("code",[t._v("await")]),t._v(" 强制其他代码等待，直到 "),a("code",[t._v("Promise")]),t._v(" 完成并返回结果")]),t._v(" "),a("li",[t._v("只能与 "),a("code",[t._v("Promise")]),t._v(" 一起使用，不适用与回调")]),t._v(" "),a("li",[t._v("只能在 "),a("code",[t._v("async")]),t._v(" 函数内部使用")])]),t._v(" "),a("h2",{attrs:{id:"vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),a("h3",{attrs:{id:"什么是-mvvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-mvvm"}},[t._v("#")]),t._v(" 什么是 MVVM")]),t._v(" "),a("p",[t._v("mvvm："),a("code",[t._v("model")]),t._v("是模型，表示数据模型的意思，例如数据库查出的数据；"),a("code",[t._v("view")]),t._v("是视图，就是渲染出来的页面；"),a("code",[t._v("viewModel")]),t._v("是将视图和模型绑定的一种关系，视图完全由模型返回的数据驱动，例如在 vue 中就利用 es5 的"),a("code",[t._v("Object.defineProperty")]),t._v("的 getter/setter 方法，进行双向绑定。")]),t._v(" "),a("h3",{attrs:{id:"vue-生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-生命周期"}},[t._v("#")]),t._v(" vue 生命周期")]),t._v(" "),a("p",[t._v("Vue 实例有一个完整的生命周期，也就是从开始创建、初始化数据、编译模版、挂载 Dom -> 渲染、更新 -> 渲染、卸载等一系列过程，我们称这是 Vue 的生命周期。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("生命周期")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("beforeCreate")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("组件实例被创建之初，组件的属性生效之前")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("created")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("组件实例已经完全创建，属性也绑定，但真实 dom 还没有生成，$el 还不可用")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("beforeMount")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("在挂载开始之前被调用：相关的 render 函数首次被调用")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("mounted")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("beforeUpdate")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("组件数据更新之前调用，发生在虚拟 DOM 打补丁之前")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("update")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("组件数据更新之后")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("activited")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("keep-alive 专属，组件被激活时调用")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("deadctivated")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("keep-alive 专属，组件被销毁时调用")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("beforeDestory")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("组件销毁前调用")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("destoryed")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("组件销毁后调用")])])])]),t._v(" "),a("h3",{attrs:{id:"组件通信方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件通信方式"}},[t._v("#")]),t._v(" 组件通信方式")]),t._v(" "),a("p",[t._v("Vue 组件通信的方法如下:")]),t._v(" "),a("ul",[a("li",[t._v("props/$emit+v-on: 通过props将数据自上而下传递，而通过$emit 和 v-on 来向上传递信息。（常用）")]),t._v(" "),a("li",[t._v("EventBus: 通过 EventBus 进行信息的发布与订阅 （全局创建一个 vue 实例来当缓存仓库，容易混淆，不建议使用）")]),t._v(" "),a("li",[t._v("vuex: 是全局数据管理库，可以通过 vuex 管理全局的数据流（项目较大时需要）")]),t._v(" "),a("li",[t._v("$attrs/$listeners: Vue2.4 中加入的$attrs/$listeners 可以进行跨级的组件通信 (包含了父作用域中不作为 prop 被识别 (且获取) 的 属性/方法 绑定)")]),t._v(" "),a("li",[t._v("provide/inject：以允许一个祖先组件向其所有子孙后代注入一个依赖，不论组件层次有多深，并在起上下游关系成立的时间里始终生效，这成为了跨组件通信的基础")])]),t._v(" "),a("h3",{attrs:{id:"computed-和-watch-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed-和-watch-的区别"}},[t._v("#")]),t._v(" computed 和 watch 的区别")]),t._v(" "),a("ul",[a("li",[t._v("computed")])]),t._v(" "),a("ol",[a("li",[t._v("支持缓存，只有依赖数据发生改变，才会重新进行计算")]),t._v(" "),a("li",[t._v("不支持异步，当 computed 内有异步操作时无效，无法监听数据的变化")]),t._v(" "),a("li",[t._v("computed 属性值会默认走缓存，计算属性是基于它们的响应式依赖进行缓存的，也就是基于 data 中声明过或者父组件传递的 props 中的数据通过计算得到的值")]),t._v(" "),a("li",[t._v("如果一个属性是由其他属性计算而来的，这个属性依赖其他属性，是一个多对一或者一对一，一般用 computed")]),t._v(" "),a("li",[t._v("如果 computed 属性属性值是函数，那么默认会走 get 方法；函数的返回值就是属性的属性值；在 computed 中的，属性都有一个 get 和一个 set 方法，当数据变化时，调用 set 方法。")])]),t._v(" "),a("ul",[a("li",[t._v("watch")])]),t._v(" "),a("ol",[a("li",[t._v("不支持缓存，数据变，直接会触发相应的操作；")]),t._v(" "),a("li",[t._v("watch 支持异步；")]),t._v(" "),a("li",[t._v("监听的函数接收两个参数，第一个参数是最新的值；第二个参数是输入之前的值；")]),t._v(" "),a("li",[t._v("当一个属性发生变化时，需要执行对应的操作；一对多；")]),t._v(" "),a("li",[t._v("监听数据必须是 data 中声明过或者父组件传递过来的 props 中的数据，当数据变化时，触发其他操作，函数有两个参数："),a("br"),t._v("\nimmediate：组件加载立即触发回调函数执行;"),a("br"),t._v("\ndeep: 深度监听，为了发现对象内部值的变化，复杂类型的数据时使用，例如数组中的对象内容的改变，注意监听数组的变动不需要这么做。注意：deep 无法监听到数组的变动和对象的新增，参考 vue 数组变异,只有以响应式的方式触发才会被监听到。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);